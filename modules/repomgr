--variables
local fullmode = false

function initialize(parFullmode)
  fullmode = parFullmode
end

function getRepos()
  local returnData = {}
  
  if not fs.exists("/empam/empam_data/repositories_list") then return returnData end
  
  local fh = fs.open("/empam/empam_data/repositories_list", "r")
  local repodata = textutils.unserialize(fh.readAll())
  fh.close()
  
  return repodata
  
end

function getRepoURL(name)
  
  
  local repos = getRepos()
  
  for k, v in pairs(repos) do
    if v.name == name then return v.url end  
  end
  
end

function addRepo(name, url, force)
  
  if not name or not url then error("Missing name or url.") end
  
  local currRepoData = {}
  
  if fs.exists("/empam/empam_data/repositories_list") then
    local fh = fs.open("/empam/empam_data/repositories_list" ,"r")
    currRepoData = textutils.unserialize(fh.readAll())
    
    for k, v in pairs(currRepoData) do
      if v.name == name and not force then
        error("Repository already exists.")
      end
      if v.name == name and force then
        print("Force mode enabled. Repository already exists, however is being overwritten....")
      end
    end
    
    fh.close()
    fs.delete("/empam/empam_data/repositories_list")
  else
    currRepoData = {}
  end
  
  local innertable = {
    ["name"] = name,
    ["url"] = url,
  }
  
  print("Inserting repository "..name)
  table.insert(currRepoData, innertable)
  print("Insertion complete.")
  
  local nfh = fs.open("/empam/empam_data/repositories_list", "w")
  nfh.write(textutils.serialize(currRepoData))
  nfh.close()
  
  currRepoData = nil
end

function removeRepo(name)
  if not fs.exists("/empam/empam_data/repositories_list") then error("No repositories were found. repositories_list is empty!") end
  
  local fh = fs.open("/empam/empam_data/repositories_list", "r")
  local currRepoData = textutils.unserialize(fh.readAll())
  fh.close()
  
  local found = false
  for k, v in pairs(currRepoData) do
    if v.name == name then
      print("Found repository "..name..", deleting...")
      table.remove(currRepoData, k)
      found = true
      break
    end
  end
  
  if not found then error("Repository was not found in repositories_list.") end
  
  fs.delete("/empam/empam_data/repositories_list")
  
  local nfh = fs.open("/empam/empam_data/repositories_list", "w")
  nfh.write(textutils.serialize(currRepoData))
  nfh.close()
end

function getPackages(name)
  local url = getRepoURL(name)
    
  local data = dlmgr.getHttpContentAsTable(url)
  
  if not data then error("Failed to get repository data.") end
  
  if not data.packages then error("No packages specified!") end
  
  return data.packages
end
